<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.zh.manager.dao.TUserMapper">
  <resultMap id="BaseResultMap" type="TUser">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginacct" jdbcType="VARCHAR" property="loginacct" />
    <result column="userpswd" jdbcType="CHAR" property="userpswd" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="createtime" jdbcType="CHAR" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, loginacct, userpswd, username, email, createtime
  </sql>

  <select id="queryAllRole" resultType="TRole">
    select *from t_role
  </select>
  <select id="queryAllUser" resultType="TUser">
    select *from t_user
  </select>
  <select id="selectCount" resultType="int">
    select count(*) from t_user where loginacct=#{loginacct};
  </select>

  <select id="queryRoleByUserid" parameterType="int" resultType="int">
    select roleid from t_user_role where userid=#{id};
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="queryUserLogin" parameterType="map" resultMap="BaseResultMap">
    select id,loginacct,userpswd,
    username,email,createtime
    from t_user where loginacct=#{loginacct} and userpswd=#{userpswd}
  </select>

  <select id="queryList"  resultMap="BaseResultMap">
    select id,loginacct,userpswd,
    username,email,createtime
    from t_user
    <where>
      <if test="queryText!=null ">loginacct like concat("%",#{queryText},"%")</if>
    </where>
    order by createtime desc
    limit #{startIndex},#{pagesize}
  </select>

  <select id="queryCount"  resultType="int">
    select count(*) from t_user
    <where>
      <if test="queryText!=null ">loginacct like concat("%",#{queryText},"%")</if>
    </where>
  </select>

  <select id="queryPermissionByUserid" parameterType="int" resultType="TPermission">
    select distinct t_permission.id, t_permission.pid, t_permission.name,t_permission.icon,t_permission.url
    from t_permission,t_role_permission,t_role,t_user_role,t_user
    where
    t_permission.id = t_role_permission.`permissionid`
    and t_role_permission.`roleid` = t_role.id
    and t_role.`id`=t_user_role.`roleid`
    and t_user_role.`userid` = t_user.`id`
    and t_user.id=#{userid} order by t_permission.id
  </select>
<!--  <select id="queryList"  resultMap="BaseResultMap">
    select id,loginacct,userpswd,
    username,email,createtime
    from t_user limit #{startIndex},#{pagesize}
  </select>

  <select id="queryCount"  resultType="int">
    select count(*) from t_user
  </select>-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteBatchUserByVO" >
    <!--@mbg.generated-->
    delete from t_user
    where id in
    <foreach collection="userList" open="(" close=")" separator="," item="user">
      #{user.id}
    </foreach>
  </delete>
  <delete id="deleteUserRoleRelationshop">
    delete from t_user_role where userid=#{userid} and roleid in
    <foreach collection="data.ids" item="roleid" open="(" separator="," close=")">
      #{roleid}
    </foreach>
  </delete>


    <delete id="deleteAllUserRoleRelationshop">
    delete from t_user_role where userid=#{userid} and roleid in
    <foreach collection="data.ids" item="roleid" open="(" separator="," close=")">
        #{roleid}
    </foreach>
    </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="TUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_user (loginacct, userpswd, username, 
      email, createtime)
    values (#{loginacct,jdbcType=VARCHAR}, #{userpswd,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR})
  </insert>


  <insert id="saveUserRoleRelationshop" >
    <foreach collection="data.ids" item="roleid" separator=";">
      insert into t_user_role(userid, roleid) values(#{userid},#{roleid})
    </foreach>
  </insert>



  <insert id="saveAllUserRoleRelationshop" >
    <foreach collection="data.ids" item="roleid" separator=";">
      insert into t_user_role(userid, roleid) values(#{userid},#{roleid})
    </foreach>
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="TUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginacct != null">
        loginacct,
      </if>
      <if test="userpswd != null">
        userpswd,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginacct != null">
        #{loginacct,jdbcType=VARCHAR},
      </if>
      <if test="userpswd != null">
        #{userpswd,jdbcType=CHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="TUser">
    <!--@mbg.generated-->
    update t_user
    <set>
      <if test="loginacct != null">
        loginacct = #{loginacct,jdbcType=VARCHAR},
      </if>
      <if test="userpswd != null">
        userpswd = #{userpswd,jdbcType=CHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="TUser">
    <!--@mbg.generated-->
    update t_user
    set loginacct = #{loginacct,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>